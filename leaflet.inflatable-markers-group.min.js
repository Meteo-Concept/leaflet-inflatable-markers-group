(function(factory,window){if(typeof define==="function"&&define.amd){define(["leaflet"],function(L){factory(L)})}else if(typeof exports==="object"){module.exports=function(L){if(L===undefined){L=require("leaflet")}factory(L);return L}}else if(typeof window!=="undefined"&&window.L){factory(window.L)}})(function leafletInflatableMarkersGroupFactory(L){const INFLATED_MARKERS_ZINDEX_OFFSET=10000;const DEFLATED_MARKERS_ZINDEX_OFFSET=20000;const InflatableMarker=L.InflatableMarker=L.Marker.extend({options:L.Icon.prototype.options,initialize:function(latlng,group,baseMarker){L.Util.setOptions(this,baseMarker.options);this.options.pane=group.options.pane;this.options._inflatedIcon=this.options.icon;this.options.icon=this;this.baseMarker=baseMarker;this._latlng=latlng;this._borders=[null,null,null,null];this._group=group;this._obstructiveMarkers=new Set;this._inflated=false;this._iconNeedsUpdate=true;this._savedZIndexOffset=this.options.zIndexOffset;this.addEventParent(this.baseMarker);this.on("contextmenu",this.toggle,this)},_computeBorders:function(map,margin){const pos=map.latLngToContainerPoint(this._latlng);const halfSize=L.point(this.options._inflatedIcon.options.iconSize).divideBy(2);const br=pos.add(halfSize).add(margin);const ul=pos.subtract(halfSize).subtract(margin);this._borders=[ul.y,br.x,br.y,ul.x]},getInflatedSize:function(){const iconOptions=this.options._inflatedIcon.options;if(!(iconOptions.iconSize instanceof L.Point))iconOptions.iconSize=L.point(iconOptions.iconSize);return iconOptions.iconSize},createIcon:function(){this._iconObj=this._inflated?this.options._inflatedIcon:this._group.options.iconCreateFunction(this);return this._iconObj.createIcon()},createShadow:function(){return null},redraw:function(){this.setIcon(this)},_addObstructiveMarker:function(otherMarker){this._obstructiveMarkers.add(otherMarker);otherMarker._obstructiveMarkers.add(this)},_removeObstructiveMarker:function(otherMarker){this._obstructiveMarkers.delete(otherMarker);otherMarker._obstructiveMarkers.delete(this)},_clearObstructiveMarkers:function(){for(const other of this._obstructiveMarkers){this._removeObstructiveMarker(other)}},_getObstructiveMarkers:function(){return this._obstructiveMarkers},_bringToFront:function(offset=INFLATED_MARKERS_ZINDEX_OFFSET){this.setZIndexOffset(offset)},_bringBackFromFront:function(){this.setZIndexOffset(this._savedZIndexOffset)},_inflate:function(){if(this._inflated)return;this._bringToFront();this._inflated=true;this._iconNeedsUpdate=true},_deflate:function(){if(!this._inflated)return;if(this._group._inflatedMarkersAbove)this._bringBackFromFront();else this._bringToFront(DEFLATED_MARKERS_ZINDEX_OFFSET);this._inflated=false;this._iconNeedsUpdate=true},toggle:function(){if(this._inflated){this._deflate()}else{this._inflate();for(const other of this._obstructiveMarkers){other._deflate()}}this._group._refreshIcons()},isInflated:function(){return this._inflated}});const InflatableMarkersGroup=L.InflatableMarkersGroup=L.FeatureGroup.extend({options:{obstructionSize:L.point(2,2),iconCreateFunction:null,groupPane:L.Marker.prototype.options.pane},initialize:function(options){L.Util.setOptions(this,options);if(!this.options.obstructionSize instanceof L.Point)this.options.obstructionSize=L.point(this.options.obstructionSize);this._featureGroup=L.featureGroup();this._markers=new Map;this._bounds=null;this._alreadyDisplayed=false;this._inflatedMarkersAbove=true;this._otherGroups=new Set;this._featureGroup.addEventParent(this)},getEvents:function(){return{"zoomend":this._zoomend}},_mayObstruct:function(distance,marker1,marker2){const marker1HalfSize=marker1.getInflatedSize().divideBy(2);const marker2HalfSize=marker2.getInflatedSize().divideBy(2);return Math.abs(distance.x)<=marker1HalfSize.x+marker2HalfSize.x+this.options.obstructionSize.x&&Math.abs(distance.y)<=marker1HalfSize.y+marker2HalfSize.y+this.options.obstructionSize.y},addLayer:function(layer){if(this.hasLayer(layer)){return this}const marker=new InflatableMarker(layer._latlng,this,layer);let inhibited=false;if(this._map){const target=this._map.latLngToContainerPoint(layer._latlng);for(const[l,m]of this._markers){const other=this._map.latLngToContainerPoint(l._latlng);if(this._mayObstruct(target.subtract(other),marker,m)){marker._addObstructiveMarker(m);inhibited=true}}}this._markers.set(layer,marker);this._featureGroup.addLayer(marker);if(!inhibited){marker._inflate();marker.redraw()}if(!this._inflatedMarkersAbove&&!marker._inflated){marker._bringToFront(DEFLATED_MARKERS_ZINDEX_OFFSET)}if(this._bounds==null){this._bounds=L.latLngBounds(layer._latlng,layer._latlng)}else{this._bounds.extend(layer._latlng)}},removeLayer:function(layer){if(this._markers.has(layer)){const marker=this._markers.get(layer);marker._clearObstructiveMarkers();this._featureGroup.removeLayer(marker);this._markers.delete(layer)}},clearLayers:function(){this._markers.clear();this._featureGroup.clearLayers();this._alreadyDisplayed=false;this._bounds=null},getBounds:function(){return this._bounds},hasLayer:function(layer){return this._markers.has(layer)},_recomputeObstructions:async function(){for(const[l,m]of this._markers){m._clearObstructiveMarkers()}const waitFor=delay=>new Promise(resolve=>setTimeout(resolve,delay));const iterator=this._markers.entries();let result=iterator.next();const allMarkers=[...this._iterateOnOwnAndOtherGroupsMarkers()];allMarkers.forEach(m=>m[1]._computeBorders(this._map,this.options.obstructionSize));allMarkers.sort((m1,m2)=>{return m1[1]._borders[0]-m2[1]._borders[0]});const process=L.bind(async function(){const start=new Date;while(!result.done){const currentDate=new Date;if(currentDate-start>200){break}const marker=result.value[1];const posNorth=this._bisectNorth(allMarkers,marker._borders[0]);const posSouth=this._bisectSouth(allMarkers,marker._borders[2]);const sortedByWest=allMarkers.slice(posNorth,posSouth).sort((m1,m2)=>{return m1[1]._borders[3]-m2[1]._borders[3]});const posWest=this._bisectWest(sortedByWest,marker._borders[3]);const posEast=this._bisectEast(sortedByWest,marker._borders[1]);sortedByWest.slice(posWest,posEast).forEach(m=>{if(marker!==m[1])marker._addObstructiveMarker(m[1])});result=iterator.next()}if(!result.done){process();return waitFor(50).then(process)}else{return true}},this);return process()},_iterateOnOwnAndOtherGroupsMarkers:function*(){let iteratorOnGroups=this._otherGroups.values();let iteratorOnMarkers=this._markers.entries();let result=iteratorOnMarkers.next();while(!result.done){yield result.value;result=iteratorOnMarkers.next()}let gr=iteratorOnGroups.next();while(!gr.done){iteratorOnMarkers=gr.value._markers.entries();result=iteratorOnMarkers.next();while(!result.done){yield result.value;result=iteratorOnMarkers.next()}gr=iteratorOnGroups.next()}},onAdd:function(map){this._map=map;this._recomputeObstructions().then(()=>{this._featureGroup.addTo(map);if(!this._alreadyDisplayed){this._alreadyDisplayed=true;this.inflateAsManyAsPossible(true)}})},onRemove:function(map){this._featureGroup.removeFrom(map);this._map=null},_refreshIcons:function(){for(const[baseMarker,marker]of this._iterateOnOwnAndOtherGroupsMarkers()){if(marker._iconNeedsUpdate)marker.redraw();marker._iconNeedsUpdate=false}},inflateAsManyAsPossible:function(reset=false){const inhibited=new Set;if(!reset){for(const[layer,marker]of this._markers){if(marker.inflated){for(const other of marker._obstructiveMarkers){inhibited.add(other)}}}}for(const[layer,marker]of this._markers){if(!inhibited.has(marker)){marker._inflate();for(const other of marker._obstructiveMarkers){inhibited.add(other);other._deflate()}}}this._refreshIcons()},deflateAll:function(){for(const[layer,marker]of this._markers){marker._deflate()}},_zoomend:function(){this._recomputeObstructions().then(()=>this.inflateAsManyAsPossible())},toggleInflatedMarkersAbove(){if(this._inflatedMarkersAbove){for(const[layer,marker]of this._markers){if(!marker._inflated){marker._bringToFront(DEFLATED_MARKERS_ZINDEX_OFFSET)}}this._inflatedMarkersAbove=false}else{for(const[layer,marker]of this._markers){if(!marker._inflated){marker._bringBackFromFront()}}this._inflatedMarkersAbove=true}},makeAwareOfOtherGroup(other){this._otherGroups.add(other);other._otherGroups.add(this);if(this._map){this._recomputeObstructions().then(()=>this.inflateAsManyAsPossible())}},removeOtherGroup(other){this._otherGroups.delete(other);other._otherGroups.delete(this);if(this._map){this._recomputeObstructions().then(()=>this.inflateAsManyAsPossible())}},_bisectWest(markers,x){if(!markers.length)return markers.length;let left=0;let right=markers.length-1;let pos=Math.trunc((left+right)/2);while(pos>left){if(x>markers[pos][1]._borders[1]){left=pos}else{right=pos}pos=Math.trunc((left+right)/2)}return markers.length>left&&x>markers[left][1]._borders[1]?left+1:left},_bisectEast(markers,x){if(!markers.length)return-1;let left=0;let right=markers.length-1;let pos=Math.ceil((left+right)/2);while(pos<right){if(x>markers[pos][1]._borders[3]){left=pos}else{right=pos}pos=Math.ceil((left+right)/2)}return markers.length>right&&x<markers[right][1]._borders[3]?right:right-1},_bisectNorth(markers,y){if(!markers.length)return markers.length;let left=0;let right=markers.length-1;let pos=Math.trunc((left+right)/2);while(pos>left){if(y>markers[pos][1]._borders[2]){left=pos}else{right=pos}pos=Math.trunc((left+right)/2)}return y>markers[left][1]._borders[2]?left:left+1},_bisectSouth(markers,y){if(!markers.length)return-1;let left=0;let right=markers.length-1;let pos=Math.ceil((left+right)/2);while(pos<right){if(y>markers[pos][1]._borders[0]){left=pos}else{right=pos}pos=Math.ceil((left+right)/2)}return markers.length>right&&y<markers[right][1]._borders[0]?right:right-1}});L.inflatableMarkersGroup=function(options){return new L.InflatableMarkersGroup(options)}},window);

//# sourceMappingURL=leaflet.inflatable-markers-group.min.js.map